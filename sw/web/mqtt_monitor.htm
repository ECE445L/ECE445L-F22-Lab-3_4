<!-- -------------------------------------------- -->
<!-- ---------------- MQTT DEBUG Monitor -------- -->
<!-- 
    Mashed up by: Mark McDermott   (from various sources)
    Project:      EE445L Lab 4E
    Date:         5/23/23
-->


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<style>
#messages
{
background-color:rgb(11, 126, 161);
font-size:3;
font-weight:bold;
color:white;
line-height:140%;
}
#status
{
background-color:rgb(11, 126, 161);
font-size:3;
font-weight:bold;
color:white;
line-height:140%;
}

hr {
  border: none;
  height: 5px;
  /* Set the hr color */
  background-color: #2ca3b8;  /* Modern Browsers */
}

</style>

<!-- -------------------------------------------- -->
<!-- ---------------- HTML HEAD ----------------- -->

  <head>
    <title>Lab 4E MQTT Monitor</title>

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

	<script src="https://unpkg.com/mqtt/dist/mqtt.min.js"></script>
 	
    <script type = "text/javascript" 
         src = "https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
    
<!-- -------------------------------------------- -->
<!-- ----------  JAVA Script Section  ----------- -->

    <script type = "text/javascript">
    
    //const mqtt = require('mqtt')

    var url = "";
    var options = {};
    var client;
    var connected_flag = 0;

    //Functions that update the DOM
	function onConnectionLost()
    {
	    console.log("connection lost");
	    document.getElementById("status").innerHTML = "Connection Lost";
	    document.getElementById("messages").innerHTML ="Connection Lost";
	    connected_flag=0;
	}
	
	function onFailure(message) 
    {
		console.log("Failed");
		document.getElementById("messages").innerHTML = "Connection Failed- Retrying";
        setTimeout(MQTTconnect, reconnectTimeout);
    }

    function onMessageArrived(data, topic)
    {
		out_msg="Message received: "+data+"<br>";
		out_msg=out_msg+"Message Topic: "+topic;
		console.log(out_msg);
		document.getElementById("messages").innerHTML =out_msg;
	}


	function onConnect() 
    {
	  // Once a connection has been made, make a subscription and send a message.
	    document.getElementById("messages").innerHTML ="Connected to:    " + url;
	    connected_flag=1
	    document.getElementById("status").innerHTML = "Connected";
	    console.log("on Connect "+connected_flag);
	}

    function MQTTconnect() 
    {
    	//Clear the messages area
	    document.getElementById("messages").innerHTML ="";

	    //Mark Disconected
	    connected_flag=0;

	    //Read user config
	    url = document.forms["connform"]["server"].value;
	    options = {
			// Clean session
			clean: true,
			connectTimeout: 4000,
			// Authentication
			clientId: document.forms["connform"]["cid"].value,
			username: document.forms["connform"]["name"].value,
			password: document.forms["connform"]["pass"].value,
		}

        console.log("connecting to " + url + " using : ");
        console.log(options);
        client  = mqtt.connect(url, options)

        client.on('connect', function (connack) {
        	if(connected_flag == 0){
        		onConnect();	
        	}
		})

        client.on('reconnect', function () {
  			console.log('Reconnecting...')
		})

	    client.on('close', function () {
	    	console.log('Reconnecting...')
			//onConnectionLost()
		})

		client.on('disconnect', function (packet) {
			onConnectionLost()
		})

		client.on('error', function (error) {
			onFailure(error)
		})

		client.on('message', function (topic, payload, packet) {
			onMessageArrived(payload.toString(), topic)
		})
  		return false;
	}

	function sub_topics()
    {
    	//Clear message
		document.getElementById("messages").innerHTML ="";
		
        if (connected_flag==0){
		    console.log("<b>Not Connected -- subscribe failed</b>");
		    document.getElementById("messages").innerHTML = "<b>Not Connected -- subscribe failed</b>";
		    return false;
	    }

	    var stopic= document.forms["subs"]["Stopic"].value;

	    client.subscribe(stopic, { qos: 0 }, function (error, granted) {
			if (error) {
				console.log(error)
			} else {
				console.log("Subscribing to topic ="+stopic)
				document.getElementById("messages").innerHTML = "Subscribing to topic ="+stopic;
			}
		})

	    return false;
	}

	function send_message()
    {
    	//Clear message
    	document.getElementById("messages").innerHTML ="";

    	if (connected_flag==0){
			console.log("<b>Not Connected -- Send failed </b>");
			document.getElementById("messages").innerHTML = "<b>Not Connected -- Send failed </b>";
			return	false;
		}
		var msg = document.forms["smessage"]["message"].value;
		var topic = document.forms["smessage"]["Ptopic"].value;

		if (topic==""){
			topic = "test-topic"
		}

    	// Send a test message with QoS of 0 to the testtopic
		client.publish(topic, msg, { qos: 0, retain: false }, function (error) {
			if (error) {
				console.log(error)
			} else {
				console.log('Published');
				document.getElementById("messages").innerHTML = "Published";
			}
		})
        
        return false;
	}

    </script>

  </head>
  
 <!-- -------------------------------------------- -->
 <!-- -----------  BODY of the MQTT Monitor ------ --> 
  
  <body>
    <h3>Lab 4E MQTT Monitor</h3>
	
	    <script type = "text/javascript">


        </script>

	<script>
	    var connected_flag=0	
	    var mqtt;
        var reconnectTimeout = 2000;
	    //var host="192.168.1.41";
	    //var port=9001;
	</script>
 
<div id="status">Status: Not Connected</div>
</div>

<br>
<form name="connform" action="" onsubmit="return MQTTconnect()">
    Server:   <input type="text"      name= "server"  value="ws://broker.emqx.io:8083/mqtt"><br><br>
    ClientID: <input type="text"      name= "cid"     value="MyID"><br><br>
    UserName: <input type="text"      name= "name"    value=""><br><br>
    Password: <input type="text"      name= "pass"    value=""><br><br>

              <input type="submit"                    value="Connect">
</form>
    
<hr>
<form name="subs" action="" onsubmit="return sub_topics()">
    Subscribe Topic:    <input type="text"      name="Stopic" value="mcdermot/w2b"> <br><br>
                        <input type="submit"    value="Subscribe">
</form> 

<hr>
<form name="smessage" action="" onsubmit="return send_message()">
    Publish Topic:      <input type="text"  name="Ptopic"  value= "mcdermot/w2b"> <br><br>
    Publish Message:    <input type="text"  name="message"><br><br>
                        <input type="submit" value="Submit">
</form>


<hr>
Received Messages:<p id="messages"></p>

   </body>
</html>
